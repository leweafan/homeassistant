mqtt:
  sensor:
    - unique_id: air_monitor_co2
      object_id: air_monitor_co2
      name: "Air Monitor CO2"
      # mac-address in topic name is case sensitive, use uppercase!
      state_topic: &air_monitor_topic "qingping/582D347056C8/up"
      device: &air_monitor_device
        identifiers: [*air_monitor_topic]
        name: "Air Monitor"
        model: "CGS2" # use "CGDN1" for "Air Monitor Lite"
        manufacturer: "Qingping"
        # Unfortunally we can't use jinja2 template here, but if you want you can hardcode it
        # sw_version: "{{ value_json.version }}"
      device_class: carbon_dioxide
      state_class: measurement
      unit_of_measurement: "ppm"
      value_template: >-
        {{ value_json.sensorData.0.co2.value 
          if value_json.type == "12" and value_json.sensorData.0.co2.status == 0 }}

    - unique_id: air_monitor_temperature
      object_id: air_monitor_temperature
      name: "Air Monitor Temperature"
      state_topic: *air_monitor_topic
      device: *air_monitor_device
      device_class: temperature
      state_class: measurement
      unit_of_measurement: "°C"
      value_template: >-
        {{ value_json.sensorData.0.temperature.value | round(1) 
          if value_json.type == "12" and value_json.sensorData.0.temperature.status == 0 }}
      # suggested_display_precision: 1

    - unique_id: air_monitor_humidity
      object_id: air_monitor_humidity
      name: "Air Monitor Humidity"
      state_topic: *air_monitor_topic
      device: *air_monitor_device
      device_class: humidity
      state_class: measurement
      unit_of_measurement: "%"
      value_template: >-
        {{ value_json.sensorData.0.humidity.value | round(1)
          if value_json.type == "12" and value_json.sensorData.0.humidity.status == 0 }}
      # suggested_display_precision: 1

    - unique_id: air_monitor_tvoc
      object_id: air_monitor_tvoc
      name: "Air Monitor tVOC"
      state_topic: *air_monitor_topic
      device: *air_monitor_device
      device_class: volatile_organic_compounds_parts
      state_class: measurement
      unit_of_measurement: "ppb"
      # if you prefer "mg/m³" as unit of measurement instead of ppb
      # change device_class to volatile_organic_compounds,
      # unit_of_measurement above and apply to value_template below.
      # value_template: >-
      #   {{ (value_json.sensorData.0.tvoc_index.value * 12.187 * 110 / (273.15 + value_json.sensorData.0.temperature.value) / 1000) | round(3)
      #     if value_json.type == "12" and value_json.sensorData.0.tvoc_index.status == 0 }}
      value_template: >-
        {{ value_json.sensorData.0.tvoc_index.value 
          if value_json.type == "12" and value_json.sensorData.0.tvoc_index.status == 0 }}

    - unique_id: air_monitor_pm25
      object_id: air_monitor_pm25
      name: "Air Monitor PM2.5"
      state_topic: *air_monitor_topic
      device: *air_monitor_device
      device_class: pm25
      state_class: measurement
      unit_of_measurement: "µg/m³"
      value_template: >-
        {{ value_json.sensorData.0.pm25.value 
          if value_json.type == "12" and value_json.sensorData.0.pm25.status == 0 }}

    - unique_id: air_monitor_pm10
      object_id: air_monitor_pm10
      name: "Air Monitor PM10"
      state_topic: *air_monitor_topic
      device: *air_monitor_device
      device_class: pm10
      state_class: measurement
      unit_of_measurement: "µg/m³"
      value_template: >-
        {{ value_json.sensorData.0.pm10.value 
          if value_json.type == "12" and value_json.sensorData.0.pm10.status == 0 }}

    - unique_id: air_monitor_battery
      object_id: air_monitor_battery
      name: "Air Monitor Battery"
      state_topic: *air_monitor_topic
      device: *air_monitor_device
      device_class: battery
      state_class: measurement
      unit_of_measurement: "%"
      # do not additionally check status here
      value_template: >-
        {{ value_json.sensorData.0.battery.value 
          if value_json.type == "12" }}
      entity_category: diagnostic

    # as we can't use jinja2 in device.sw_version,
    # so add addtional sensor to monitor version.
    # this sesnor is disabled by default.
    - unique_id: air_monitor_version
      object_id: air_monitor_version
      name: "Air Monitor Version"
      state_topic: *air_monitor_topic
      device: *air_monitor_device
      value_template: >-
        {{ value_json.version 
          if value_json.type == "12" }}
      entity_category: diagnostic
      enabled_by_default: false

    - unique_id: air_monitor_noise
      object_id: air_monitor_noise
      name: "Air Monitor Noise"
      state_topic: *air_monitor_topic
      device: *air_monitor_device
      device_class: sound_pressure
      state_class: measurement
      unit_of_measurement: "dB"
      value_template: >-
        {{ value_json.sensorData.0.noise.value 
          if value_json.type == "12" and value_json.sensorData.0.noise.status == 0 }}
